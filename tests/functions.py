from scipy import special
import math
import numpy as np


def psi_harm(x, n=5):
    H = special.hermite(n)
    C = (1 / (np.pi)) ** (0.25) * 1 / (2 ** n * math.factorial(n)) ** (0.5)
    res = C * H(x) * np.exp(-x ** 2 / 2)
    return res


def psi_harm_sq(x, n=5):
    return psi_harm(x, n) ** 2


def pyexp(x):
    return math.e ** x


def logistic(x, L=1, x0=0, k=1):
    return L / (1 + math.exp(-k * (x - x0)))


def polynomial(x, *ws):
    return sum(w * x ** i for i, w in enumerate(ws))


def p0(x):
    return polynomial(x, 2)


def p1(x):
    return polynomial(x, 2, 1.5)


def p2(x):
    return polynomial(x, 2, 1.5, -3)


def p3(x):
    return polynomial(x, 2, 1.5, -3, 0.2)


def p4(x):
    return polynomial(x, 2, 1.5, -3, 0.2, 7)


def p50(x):
    # coenfficients generated by random.random
    coefficients = [
        0.5790214157395489,
        0.15059567982810174,
        0.11086654871636314,
        0.27460531912918473,
        0.03667206727738459,
        0.4998723378731976,
        0.11092132003961219,
        0.29891576425671784,
        0.33404103411539476,
        0.9035308205533984,
        0.030180053588345412,
        0.6268010717740422,
        0.78073573035588,
        0.8327387933738176,
        0.5720476561695386,
        0.7161903091635239,
        0.49397674158182214,
        0.9392779985588348,
        0.973929288455355,
        0.37245474434698556,
        0.5443914518813985,
        0.9124212514166455,
        0.08361119215751855,
        0.843493540516091,
        0.37677665010531225,
        0.20606186363169054,
        0.9331631039241992,
        0.7052972452659978,
        0.5468405762560024,
        0.32964695729692495,
        0.25941743964391084,
        0.8413251037165497,
        0.924884105423724,
        0.7987796033112032,
        0.7069376285297423,
        0.9333100532862911,
        0.8184869093091451,
        0.7896335125499965,
        0.5767764751161576,
        0.5014220346762265,
        0.557060181778671,
        0.33890592173811906,
        0.5791935559203039,
        0.9363785196979136,
        0.6607241178481399,
        0.16764667465920247,
        0.022485695819336016,
        0.7767435999540694,
        0.9148959588336626,
        0.36521800646518854,
        0.9893341389701065]
    return polynomial(x, *coefficients)
